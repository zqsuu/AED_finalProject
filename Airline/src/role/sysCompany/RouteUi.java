/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package role.sysCompany;

//import com.mysql.jdbc.Connection;
//import com.mysql.jdbc.Statement;

import ui.AirCompany.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;

import java.sql.*;
import net.proteanit.sql.DbUtils;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.AirlineCompany;
import model.Airport;
import model.AirportList;
import model.Route;

/**
 *
 * @author HP
 */
public class RouteUi extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    AirlineCompany airlineCompany;
    AirportList airportList;
    
    Connection con;
    Statement st;

    public RouteUi(AirlineCompany air) {
        initComponents();
        
        airlineCompany = air;
        
        try{
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            
            ResultSet rs = st.executeQuery("Select * from airlinedb1.airport");
            while(rs.next()){
                cbDep.addItem(rs.getString("name"));
                cbArr.addItem(rs.getString("name"));
            }
            
            populateTable();
        
        }catch(Exception e){
            e.printStackTrace();
 
        }  

        

//        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        Appply = new javax.swing.JButton();
        lblId2 = new javax.swing.JLabel();
        lblId1 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoute = new javax.swing.JTable();
        txtFlyTime = new javax.swing.JTextField();
        lblId17 = new javax.swing.JLabel();
        txtDepTime = new javax.swing.JTextField();
        lblId18 = new javax.swing.JLabel();
        txtFallTime = new javax.swing.JTextField();
        lblId19 = new javax.swing.JLabel();
        txtRN = new javax.swing.JTextField();
        lblId20 = new javax.swing.JLabel();
        txtArrTer = new javax.swing.JTextField();
        txtBaggage = new javax.swing.JTextField();
        lblId9 = new javax.swing.JLabel();
        lblId21 = new javax.swing.JLabel();
        txtDepTer = new javax.swing.JTextField();
        cbDep = new javax.swing.JComboBox<>();
        cbArr = new javax.swing.JComboBox<>();
        btnSave1 = new javax.swing.JButton();
        lblId22 = new javax.swing.JLabel();
        txtBp = new javax.swing.JTextField();
        txtEp = new javax.swing.JTextField();
        lblId10 = new javax.swing.JLabel();
        lblId23 = new javax.swing.JLabel();
        txtFp = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Airline Route");

        Appply.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Appply.setText("Apply");
        Appply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppplyActionPerformed(evt);
            }
        });

        lblId2.setForeground(new java.awt.Color(255, 255, 255));
        lblId2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId2.setText("FLY TIME");

        lblId1.setForeground(new java.awt.Color(255, 255, 255));
        lblId1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId1.setText("DESTINATION");

        lblId.setForeground(new java.awt.Color(255, 255, 255));
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId.setText("DEPARTURE");

        tblRoute.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ROUTE NAME", "DEPARTURE", "DEPARTURE TIME", "DESTINATION", "FALL TIME", "FLY TIME", "AIPLANE TYPE", "FIRST PRICE", "BUSI-PRICE", "ECO-PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRoute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRouteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRoute);

        txtFlyTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFlyTimeKeyTyped(evt);
            }
        });

        lblId17.setForeground(new java.awt.Color(255, 255, 255));
        lblId17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId17.setText("DEPARTURE TIME");

        txtDepTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDepTimeKeyPressed(evt);
            }
        });

        lblId18.setForeground(new java.awt.Color(255, 255, 255));
        lblId18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId18.setText("FALL TIME");

        txtFallTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFallTimeKeyTyped(evt);
            }
        });

        lblId19.setForeground(new java.awt.Color(255, 255, 255));
        lblId19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId19.setText("ROUTE NAME");

        txtRN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRNKeyPressed(evt);
            }
        });

        lblId20.setForeground(new java.awt.Color(255, 255, 255));
        lblId20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId20.setText("FALL TERMINAL");

        lblId9.setForeground(new java.awt.Color(255, 255, 255));
        lblId9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId9.setText("BAGGAGE");

        lblId21.setForeground(new java.awt.Color(255, 255, 255));
        lblId21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId21.setText("DEPARTURE TERMINAL");

        txtDepTer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDepTerKeyPressed(evt);
            }
        });

        btnSave1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnSave1.setText("Clear");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        lblId22.setForeground(new java.awt.Color(255, 255, 255));
        lblId22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId22.setText("BUSINESS CLASS PRICE");

        lblId10.setForeground(new java.awt.Color(255, 255, 255));
        lblId10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId10.setText("ECONOMY CLASS PRICE");

        lblId23.setForeground(new java.awt.Color(255, 255, 255));
        lblId23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId23.setText("FIRST CLASS PRICE");

        txtFp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFpKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 58, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblId1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbDep, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbArr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lblId19, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRN, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(26, 26, 26)
                                                        .addComponent(lblId18, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtFallTime, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(lblId17, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(lblId2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtFlyTime, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtDepTime, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(74, 74, 74)))
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblId20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblId21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblId10, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 10, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblId9, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(458, 458, 458)
                                        .addComponent(Appply)
                                        .addGap(128, 128, 128)
                                        .addComponent(btnSave1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(lblId23, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFp, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblId22, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBp, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBaggage)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtDepTer)
                                        .addComponent(txtArrTer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtEp, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 1, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblId2)
                                .addComponent(txtFlyTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblId19)
                                .addComponent(txtRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBaggage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId1)
                            .addComponent(cbArr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDepTer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtArrTer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId20)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDepTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFallTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId18))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId23)
                    .addComponent(txtBp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId22)
                    .addComponent(lblId10)
                    .addComponent(txtEp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Appply)
                    .addComponent(btnSave1))
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblRoute.getModel();
        model.setRowCount(0);
        try{
            ResultSet rs = st.executeQuery("Select * from airlinedb1.route");
            while(rs.next()){
                if(rs.getString("company").equals(airlineCompany.getName())){
                    Object[] row = new Object[10];
                    row[0] = rs.getString("routename");
                    row[1] = rs.getString("departureairport");
                    row[2] = rs.getString("departuretime");
                    row[3] = rs.getString("fallairport");
                    row[4] = rs.getString("falltime");
                    row[5] = rs.getString("flytime");
                    if(rs.getString("type")==null||rs.getString("type").isEmpty())
                        row[6] = "";
                    else
                        row[6] = rs.getString("type");
                    row[7] = rs.getInt("firstprice");
                    row[8] = rs.getInt("businessprice");
                    row[9] = rs.getInt("economyprice");
                    model.addRow(row);  
                    
                }
                
            }
        }catch(Exception e){
            e.printStackTrace();
 
        }      
        
    }
    
    


    private void AppplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppplyActionPerformed
        // TODO add your handling code here:
        String route = txtRN.getText();
        String depAir = String.valueOf(cbDep.getSelectedItem());
        String arrAir = String.valueOf(cbArr.getSelectedItem());
        String depTime = txtDepTime.getText();
        String arrTime = txtFallTime.getText();
        String baggage = txtBaggage.getText();
        String depTer = txtDepTer.getText();
        String arrTer = txtArrTer.getText();
        if(baggage.isEmpty()||depTer.isEmpty()||arrTer.isEmpty()||route.isEmpty()||depTime.isEmpty()||arrTime.isEmpty()||txtDepTer.getText().isEmpty()||txtArrTer.getText().isEmpty()||txtBaggage.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please fill all information!");
            return;
        }
        if(depAir.equals(arrAir)){
            JOptionPane.showMessageDialog(this, "Departure airport and Arrival airport can't be same");
            return;
        }
        int fp = Integer.parseInt(txtFp.getText());
        int bp = Integer.parseInt(txtBp.getText());
        int ep = Integer.parseInt(txtEp.getText());
        int fly = Integer.parseInt(txtFlyTime.getText());
        
        try{
            ResultSet rs = st.executeQuery("Select * from airlinedb1.route");
            int i=0;
            while(rs.next()){
                if(rs.getString("routename").equals(route)){
                    JOptionPane.showMessageDialog(this, "Route name has existed");
                    return;
                }
                i++;
            }
            i++;
            String query ="insert into airlinedb1.route (idkey,routename,company, departureairport, fallairport, departuretime,falltime,departureterminal,fallterminal,flytime,firstprice,businessprice,economyprice,baggage) values(" +i+",'"+route+"','"+airlineCompany.getName()+"','"+depAir+"','"+arrAir+"','"+depTime+"','"+arrTime+"','"+depTer+"','"+ arrTer +"',"+fly+","+fp+","+bp+","+ep+",'"+baggage+ "')";
            st.executeUpdate(query);
            
        }catch(Exception e){
            e.printStackTrace();
 
        }   
        
        populateTable();
        
        txtRN.setText("");
        txtFlyTime.setText("");
        txtDepTime.setText("");
        txtFallTime.setText("");
        txtDepTer.setText("");
        txtArrTer.setText("");
        txtBaggage.setText("");
        
        JOptionPane.showMessageDialog(this, "Route added");

    }//GEN-LAST:event_AppplyActionPerformed

    

    private void tblRouteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRouteMouseClicked
        // TODO add your handling code here:



    }//GEN-LAST:event_tblRouteMouseClicked

    private void txtDepTimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDepTimeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepTimeKeyPressed

    private void txtRNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRNKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRNKeyPressed

    private void txtDepTerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDepTerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepTerKeyPressed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        txtRN.setText("");
        txtFlyTime.setText("");
        txtDepTime.setText("");
        txtFallTime.setText("");
        txtDepTer.setText("");
        txtArrTer.setText("");
        txtBaggage.setText("");
        txtBp.setText("");
        txtFp.setText("");
        txtEp.setText("");
        
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void txtFallTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFallTimeKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFallTimeKeyTyped

    private void txtFlyTimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFlyTimeKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if(ch<'0'||ch>'9')
            evt.consume();
    }//GEN-LAST:event_txtFlyTimeKeyTyped

    private void txtFpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFpKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFpKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Appply;
    private javax.swing.JButton btnSave1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbArr;
    private javax.swing.JComboBox<String> cbDep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblId1;
    private javax.swing.JLabel lblId10;
    private javax.swing.JLabel lblId17;
    private javax.swing.JLabel lblId18;
    private javax.swing.JLabel lblId19;
    private javax.swing.JLabel lblId2;
    private javax.swing.JLabel lblId20;
    private javax.swing.JLabel lblId21;
    private javax.swing.JLabel lblId22;
    private javax.swing.JLabel lblId23;
    private javax.swing.JLabel lblId9;
    private javax.swing.JTable tblRoute;
    private javax.swing.JTextField txtArrTer;
    private javax.swing.JTextField txtBaggage;
    private javax.swing.JTextField txtBp;
    private javax.swing.JTextField txtDepTer;
    private javax.swing.JTextField txtDepTime;
    private javax.swing.JTextField txtEp;
    private javax.swing.JTextField txtFallTime;
    private javax.swing.JTextField txtFlyTime;
    private javax.swing.JTextField txtFp;
    private javax.swing.JTextField txtRN;
    // End of variables declaration//GEN-END:variables

//    private void populateTable() {
//
//        DefaultTableModel model = (DefaultTableModel) tblRoute.getModel();
//        model.setRowCount(0);
//        for (Doctor dc : dlist.getDlist()){
//            Object[] row = new Object[9];
//            row[0] = dc.getId();
//            row[1] = dc.getName();
//            row[2] = dc.getGender();
//            row[3] = dc.getAge();
//            row[4] = dc.getPhoneNumber();
//            row[5] = dc.getPassword();
//            row[6] = dc.getField();
//            row[7] = dc.getStandard();
//            row[8] = dc.getFee();
//            
//            model.addRow(row);
//        }
//    }
}
