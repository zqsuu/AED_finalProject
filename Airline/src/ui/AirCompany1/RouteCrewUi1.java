/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AirCompany1;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.AirlineCompany;
import model.Airplane;
import model.Employee;
import model.EmployeeArrange;
import model.Route;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP
 */
public class RouteCrewUi1 extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    AirlineCompany airlineCompany;

    public RouteCrewUi1(AirlineCompany air) {
        initComponents();
        airlineCompany = air;
        displayArrange();
        arrangeCount();
        displayCbl();

        populateTable();

        
        
        clear();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lblId1 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblId6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArrange = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        lblSearchContent = new javax.swing.JLabel();
        cbCaptain = new javax.swing.JComboBox<>();
        cbRN = new javax.swing.JComboBox<>();
        cbType = new javax.swing.JComboBox<>();
        btnDelete1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnSave1 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblId13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pilotList = new javax.swing.JList<>();
        lblId14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        stList = new javax.swing.JList<>();
        btnClear1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Airline Route Crew Arrangement");

        lblId1.setForeground(new java.awt.Color(255, 255, 255));
        lblId1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId1.setText("AIPLANE TYPE");

        lblId.setForeground(new java.awt.Color(255, 255, 255));
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId.setText("ROUTE NAME");

        lblId6.setForeground(new java.awt.Color(255, 255, 255));
        lblId6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId6.setText("CAPTAIN");

        tblArrange.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ROUTE NAME", "AIRPLANE TYPE", "CAPTAIN", "PILOT1", "PILOT2", "ST.1", "ST.2", "ST.3", "ST.4", "ST.5", "ST.6"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblArrange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArrangeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblArrange);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblSearchContent.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        lblSearchContent.setForeground(new java.awt.Color(255, 255, 255));
        lblSearchContent.setText("Search Content:");

        cbCaptain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose a captain>" }));
        cbCaptain.setLightWeightPopupEnabled(false);

        cbRN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose a route>" }));

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose a type>" }));

        btnDelete1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnDelete1.setText("Delete");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        btnUpdate1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnUpdate1.setText("Search");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        btnSave1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblId13.setForeground(new java.awt.Color(255, 255, 255));
        lblId13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId13.setText("PILOT(select 2)");

        jScrollPane2.setViewportView(pilotList);

        lblId14.setForeground(new java.awt.Color(255, 255, 255));
        lblId14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId14.setText("STEWARD/STEWARDESS(select 6)");

        jScrollPane3.setViewportView(stList);

        btnClear1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnClear1.setText("Clear");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbRN, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblId1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblId6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbCaptain, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId13, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSave1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnClear1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(122, 122, 122))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblId14, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(btnDelete1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSearchContent)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClear)
                .addGap(86, 86, 86))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbCaptain, cbRN, cbType});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchContent)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate1)
                    .addComponent(btnClear)
                    .addComponent(btnDelete1))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblId14)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(btnSave1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClear1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblId13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblId)
                                    .addComponent(cbRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblId1)
                                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblId6)
                                    .addComponent(cbCaptain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(49, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbCaptain, cbRN, cbType});

    }// </editor-fold>//GEN-END:initComponents

    Connection con = null;
    Statement st = null, st1 = null;
    ResultSet rs = null, rs1 = null, rsRN = null, rsPilot = null, rsCaptain = null, rsType = null, rsSt = null;

    int idarrange = 0;
    int arrangeId = 0;

    private void arrangeCount() {
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st1 = (Statement) con.createStatement();
            rs1 = st.executeQuery("select Max(idarrange) from airlinedb1.routecrew");
            rs1.next();
            idarrange = rs1.getInt(1) + 1;
            rs1.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void displayArrange() {

        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            rs = st.executeQuery("Select * from airlinedb1.routecrew");
            tblArrange.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void displayCbl() {
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();

            //RouteName combobox
            rsRN = st.executeQuery("Select * from airlinedb1.route");
            while (rsRN.next()) {
                cbRN.addItem(rsRN.getString("routename"));
            }
            rsRN.close();

            //airplane type combobox
            rsType = st.executeQuery("Select * from airlinedb1.airplanetype");
            while (rsType.next()) {
                cbType.addItem(rsType.getString("type"));
            }
            rsType.close();
            
            //captain combobox
            rsCaptain = st.executeQuery("Select * from airlinedb1.employee Where role = 'Captain'");
            while (rsCaptain.next()) {
                cbCaptain.addItem(rsCaptain.getString("name"));
            }
            rsCaptain.close();
            
            //Pilot List
            DefaultListModel pilotlistModel = (DefaultListModel) pilotList.getModel();
            rsPilot = st.executeQuery("Select * from airlinedb1.employee Where role = 'Pilot'");
            while (rsPilot.next()) {
                pilotlistModel.addElement(rsPilot.getString("name"));
            }
            rsPilot.close();

            //st List
            DefaultListModel stlistModel = (DefaultListModel) stList.getModel();
            rsSt = st.executeQuery("Select * from airlinedb1.employee Where role = 'Steward/Stewardess'");
            while (rsSt.next()) {
                stlistModel.addElement(rsSt.getString("name"));
            }
            rsSt.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    

//    public void populateCombo() {
//        pilotList.removeAll();
//        stList.removeAll();
//
//        boolean exist = false;
//        for (Route r : airlineCompany.getRoute()) {
//            for (EmployeeArrange er : airlineCompany.getArrange()) {
//                if (r == er.getRoute()) {
//                    exist = true;
//                    break;
//                }
//            }
//            if (!exist) {
//                cbRN.addItem(r.getRouteName());
//            }
//            exist = false;
//        }
//
//        for (Airplane a : airlineCompany.getAirplane()) {
//            if (a.getRoute() == null) {
//                cbType.addItem(a.getType());
//            }
//        }
//
//        DefaultListModel pilotlistModel = (DefaultListModel) pilotList.getModel();
//        DefaultListModel stlistModel = (DefaultListModel) stList.getModel();
//
//        for (Employee e : airlineCompany.getEmployee()) {
//            if (e.getRole().equals("Captain") && e.getRoute().isEmpty()) {
//                cbCaptain.addItem(e.getName());
//            } else if (e.getRole().equals("Pilot") && e.getRoute().isEmpty()) {
//                pilotlistModel.addElement(e.getName());
//            } else if (e.getRole().equals("St") && e.getRoute().isEmpty()) {
//                stlistModel.addElement(e.getName());
//            }
//        }
//
//    }

    private void populteTable() {
        DefaultTableModel model = (DefaultTableModel) tblArrange.getModel();
        model.setRowCount(0);

        for (EmployeeArrange er : airlineCompany.getArrange()) {
            Object[] row = new Object[11];
            row[0] = er.getRoute().getRouteName();
            row[1] = er.getRoute().getAirplane().getType();
            row[2] = er.getCaptain().getName();
            row[3] = er.getPilot().get(0).getName();
            row[4] = er.getPilot().get(1).getName();
            row[5] = er.getSt().get(0).getName();
            row[6] = er.getSt().get(1).getName();
            row[7] = er.getSt().get(2).getName();
            row[8] = er.getSt().get(3).getName();
            row[9] = er.getSt().get(4).getName();
            row[10] = er.getSt().get(5).getName();
            model.addRow(row);
        }
    }

    private void clear() {
        cbRN.setSelectedItem("<choose a route>");
        cbType.setSelectedItem("<choose a type");
        cbCaptain.setSelectedItem("<choose a captain>");
        pilotList.clearSelection();
        stList.clearSelection();

    }
    private void tblArrangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArrangeMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_tblArrangeMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        //Get tblList first
        DefaultTableModel model = (DefaultTableModel) tblArrange.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblArrange.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblArrange.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        //Get tblList first
        DefaultTableModel tblModel = (DefaultTableModel) tblArrange.getModel();
        //delete row
        EmployeeArrange arr = null;
        for (EmployeeArrange er : airlineCompany.getArrange()) {
            if (er.getRoute().getRouteName().equals(tblModel.getValueAt(selectedRowIndex, 0))) {
                arr = er;
                break;
            }
        }

        arr.getCaptain().setRoute("");
        arr.getPilot().get(0).setRoute("");
        arr.getPilot().get(1).setRoute("");
        for (int i = 0; i < 6; i++) {
            arr.getSt().get(i).setRoute("");
        }
        arr.getRoute().getAirplane().setRoute(null);
        arr.getRoute().setAirplane(null);
        airlineCompany.removeArrange(arr);

        populateTable();
        populateCombo();

        JOptionPane.showMessageDialog(this, "Arrangement deleted");
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        String content = txtSearch.getText();
        if (content.equals("")) {
            return;
        }

        DefaultTableModel tblModel = (DefaultTableModel) tblArrange.getModel();
        tblModel.setRowCount(0);

        boolean search = false;
        for (EmployeeArrange er : airlineCompany.getArrange()) {
            if (er.getRoute().getRouteName().equals(content)) {
                search = true;
            }
            if (er.getRoute().getAirplane().getType().equals(content)) {
                search = true;
            }
            if (er.getCaptain().getName().equals(content)) {
                search = true;
            }
            if (er.getPilot().get(0).getName().equals(content) || er.getPilot().get(1).getName().equals(content)) {
                search = true;
            }
            for (int i = 0; i < 6; i++) {
                if (er.getSt().get(i).getName().equals(content)) {
                    search = true;
                }
            }
            if (search) {
                Object[] row = new Object[11];
                row[0] = er.getRoute().getRouteName();
                row[1] = er.getRoute().getAirplane().getType();
                row[2] = er.getCaptain().getName();
                row[3] = er.getPilot().get(0).getName();
                row[4] = er.getPilot().get(1).getName();
                row[5] = er.getSt().get(0).getName();
                row[6] = er.getSt().get(1).getName();
                row[7] = er.getSt().get(2).getName();
                row[8] = er.getSt().get(3).getName();
                row[9] = er.getSt().get(4).getName();
                row[10] = er.getSt().get(5).getName();
                tblModel.addRow(row);
                search = false;
            }
        }

    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        String route = String.valueOf(cbRN.getSelectedItem());
        String captain = String.valueOf(cbCaptain.getSelectedItem());
        String type = String.valueOf(cbType.getSelectedItem());
        List<String> pilot = pilotList.getSelectedValuesList();
        List<String> st = stList.getSelectedValuesList();
        if (route.equals("<choose a route>")) {
            JOptionPane.showMessageDialog(this, "Please Select a Route");
            return;
        }
        if (type.equals("null")) {
            JOptionPane.showMessageDialog(this, "Please Select a Airplane Type");
            return;
        }
        if (captain.equals("<choose a captain>")) {
            JOptionPane.showMessageDialog(this, "Please Select Captain");
            return;
        }
        if (pilot.size() != 2) {
            JOptionPane.showMessageDialog(this, "Please Select 2 Pilot");
            return;
        }
        if (st.size() != 6) {
            JOptionPane.showMessageDialog(this, "Please Select 6 St");
            return;
        }

        Route r = null;
        Airplane air = null;

        for (Route rou : airlineCompany.getRoute()) {
            if (rou.getRouteName().equals(route)) {
                r = rou;
                break;
            }
        }
        for (Airplane a : airlineCompany.getAirplane()) {
            if (a.getType().equals(type) && a.getRoute() == null) {
                air = a;
            }
        }

        air.setRoute(r);
        r.setAirplane(air);
        EmployeeArrange er = new EmployeeArrange();

        for (Employee e : airlineCompany.getEmployee()) {
            if (e.getRole().equals("Captain") && e.getName().equals(captain) && e.getRoute().isEmpty()) {
                e.setRoute(route);
                er.setCaptain(e);
            } else if (e.getRole().equals("Pilot") && e.getRoute().isEmpty()) {
                if (e.getName().equals(pilot.get(0)) || e.getName().equals(pilot.get(1))) {
                    e.setRoute(route);
                    er.addPilot(e);
                }
            } else if (e.getRole().equals("St") && e.getRoute().isEmpty()) {
                for (String name : st) {
                    if (e.getName().equals(name)) {
                        e.setRoute(route);
                        er.addSt(e);
                        break;
                    }
                }
            }
        }

        airlineCompany.addArrange(er);
        populateTable();
        populateCombo();

        JOptionPane.showMessageDialog(this, "Successfully Arranged!");
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed

        populteTable();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClear1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbCaptain;
    private javax.swing.JComboBox<String> cbRN;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblId1;
    private javax.swing.JLabel lblId13;
    private javax.swing.JLabel lblId14;
    private javax.swing.JLabel lblId6;
    private javax.swing.JLabel lblSearchContent;
    private javax.swing.JList<String> pilotList;
    private javax.swing.JList<String> stList;
    private javax.swing.JTable tblArrange;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblArrange.getModel();
        model.setRowCount(0);

//        for (Doctor dc : dlist.getDlist()){
//            Object[] row = new Object[9];
//            row[0] = dc.getId();
//            row[1] = dc.getName();
//            row[2] = dc.getGender();
//            row[3] = dc.getAge();
//            row[4] = dc.getPhoneNumber();
//            row[5] = dc.getPassword();
//            row[6] = dc.getField();
//            row[7] = dc.getStandard();
//            row[8] = dc.getFee();
//            
//            model.addRow(row);
//        }
    }
}
