/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AirCompany;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP
 */
public class RouteCrewUi extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
//    DoctorDirectory dlist;
    public RouteCrewUi() {
        initComponents();
        arrangeCount();
        displayArrange();
        displayRNList();
        displayEmployee1();
        displayEmployee2();
        displayEmployee3();
        clear();

//        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lblId1 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblId6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblArrange = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        lblSearchContent = new javax.swing.JLabel();
        lblId11 = new javax.swing.JLabel();
        lblId12 = new javax.swing.JLabel();
        lblId17 = new javax.swing.JLabel();
        lblId18 = new javax.swing.JLabel();
        lblId19 = new javax.swing.JLabel();
        lblId20 = new javax.swing.JLabel();
        lblId21 = new javax.swing.JLabel();
        lblId22 = new javax.swing.JLabel();
        lblId23 = new javax.swing.JLabel();
        cbCaptain = new javax.swing.JComboBox<>();
        cbPilot1 = new javax.swing.JComboBox<>();
        cbPilot2 = new javax.swing.JComboBox<>();
        cbSt1 = new javax.swing.JComboBox<>();
        cbSt2 = new javax.swing.JComboBox<>();
        cbSt4 = new javax.swing.JComboBox<>();
        cbSt3 = new javax.swing.JComboBox<>();
        cbRN = new javax.swing.JComboBox<>();
        cbType = new javax.swing.JComboBox<>();
        lblId24 = new javax.swing.JLabel();
        cbSt5 = new javax.swing.JComboBox<>();
        cbSt6 = new javax.swing.JComboBox<>();
        lblId25 = new javax.swing.JLabel();
        btnDelete1 = new javax.swing.JButton();
        btnRetrieve = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnSave1 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Airline Route Crew Arrangement");

        lblId1.setForeground(new java.awt.Color(255, 255, 255));
        lblId1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId1.setText("AIPLANE TYPE");

        lblId.setForeground(new java.awt.Color(255, 255, 255));
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId.setText("ROUTE NAME");

        lblId6.setForeground(new java.awt.Color(255, 255, 255));
        lblId6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId6.setText("CAPTAIN");

        tblArrange.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Arrange Id", "ROUTE NAME", "AIRPLANE TYPE", "CAPTAIN", "PILOT1", "PILOT2", "ST.1", "ST.2", "ST.3", "ST.4", "ST.5", "ST.6"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblArrange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblArrangeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblArrange);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        lblSearchContent.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        lblSearchContent.setForeground(new java.awt.Color(255, 255, 255));
        lblSearchContent.setText("Search Content:");

        lblId11.setForeground(new java.awt.Color(255, 255, 255));
        lblId11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId11.setText("PILOT");

        lblId12.setForeground(new java.awt.Color(255, 255, 255));
        lblId12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId12.setText("STEWARD/STEWARDESS");

        lblId17.setForeground(new java.awt.Color(255, 255, 255));
        lblId17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId17.setText("1");

        lblId18.setForeground(new java.awt.Color(255, 255, 255));
        lblId18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId18.setText("1");

        lblId19.setForeground(new java.awt.Color(255, 255, 255));
        lblId19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId19.setText("2");

        lblId20.setForeground(new java.awt.Color(255, 255, 255));
        lblId20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId20.setText("1");

        lblId21.setForeground(new java.awt.Color(255, 255, 255));
        lblId21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId21.setText("2");

        lblId22.setForeground(new java.awt.Color(255, 255, 255));
        lblId22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId22.setText("4");

        lblId23.setForeground(new java.awt.Color(255, 255, 255));
        lblId23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId23.setText("5");

        cbCaptain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose a captain>" }));

        cbPilot1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose pilot 1>" }));

        cbPilot2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose pilot 2>" }));

        cbSt1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<steward/stewardess 1>" }));
        cbSt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSt1ActionPerformed(evt);
            }
        });

        cbSt2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<steward/stewardess 2>" }));

        cbSt4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<steward/stewardess 4>" }));

        cbSt3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<steward/stewardess 3>" }));
        cbSt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSt3ActionPerformed(evt);
            }
        });

        cbRN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<choose a route>" }));

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "null" }));

        lblId24.setForeground(new java.awt.Color(255, 255, 255));
        lblId24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId24.setText("3");

        cbSt5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<steward/stewardess 5>" }));

        cbSt6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<steward/stewardess 6>" }));

        lblId25.setForeground(new java.awt.Color(255, 255, 255));
        lblId25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblId25.setText("6");

        btnDelete1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnDelete1.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete1.setText("Delete");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        btnRetrieve.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnRetrieve.setForeground(new java.awt.Color(0, 0, 0));
        btnRetrieve.setText("Retrieve");
        btnRetrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveActionPerformed(evt);
            }
        });

        btnUpdate1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnUpdate1.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate1.setText("Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        btnSave1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnSave1.setForeground(new java.awt.Color(0, 0, 0));
        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(0, 0, 0));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId12, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSt4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblId17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId18, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbPilot1, 0, 170, Short.MAX_VALUE)
                            .addComponent(cbCaptain, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblId23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbSt5, 0, 170, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblId21, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbSt2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId24, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbSt3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSt6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPilot2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(303, 303, 303))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave1)
                                .addGap(31, 31, 31)
                                .addComponent(btnDelete1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRetrieve)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClear)))
                        .addGap(30, 30, 30)
                        .addComponent(btnUpdate1)
                        .addGap(156, 156, 156)
                        .addComponent(lblSearchContent)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbRN, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbCaptain, cbPilot1, cbPilot2, cbRN, cbSt1, cbSt2, cbSt3, cbSt4, cbSt5, cbSt6, cbType});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSearchContent)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete1)
                            .addComponent(btnUpdate1)
                            .addComponent(btnSave1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRetrieve)
                            .addComponent(btnClear))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(cbRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId1)
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId6)
                    .addComponent(lblId18)
                    .addComponent(cbCaptain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId11)
                    .addComponent(lblId17)
                    .addComponent(lblId19)
                    .addComponent(cbPilot1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPilot2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId12)
                    .addComponent(lblId20)
                    .addComponent(lblId21)
                    .addComponent(cbSt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId22)
                    .addComponent(lblId23)
                    .addComponent(cbSt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSt5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSt6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId25))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbCaptain, cbPilot1, cbPilot2, cbRN, cbSt1, cbSt2, cbSt3, cbSt4, cbSt5, cbSt6, cbType});

    }// </editor-fold>//GEN-END:initComponents

    Connection con = null;
    Statement st = null, st1 = null;
    ResultSet rs = null, rs1 = null, rs2 = null, rs3 = null, rs4 = null;

    int idarrange = 0;
    int arrangeId = 0;

    private void arrangeCount() {
        try {
            st1 = (Statement) con.createStatement();
            rs1 = st.executeQuery("select Max(idairplane) from airlinedb1.airplane");
            rs1.next();
            idarrange = rs1.getInt(1) + 1;
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void displayArrange() {

        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            rs = st.executeQuery("Select * from airlinedb1.routecrew");
            tblArrange.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void displayRNList() {
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            rs = st.executeQuery("Select * from airlinedb1.route");
            while (rs.next()) {
                cbRN.addItem(rs.getString("routename"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void displayEmployee1() {
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            rs2 = st.executeQuery("Select * from airlinedb1.employee Where role = 'Captain'");
            
            while (rs2.next()) {
                cbCaptain.addItem(rs2.getString("name"));
            }
            con.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    private void displayEmployee2() {
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            rs3 = st.executeQuery("Select * from airlinedb1.employee Where role = 'Pilot'");
            while (rs3.next()) {
                cbPilot1.addItem(rs2.getString("name"));
                cbPilot2.addItem(rs2.getString("name"));
            }
            con.close();
            rs3.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void displayEmployee3(){
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
            st = (Statement) con.createStatement();
            rs4 = st.executeQuery("Select * from airlinedb1.employee Where role = 'Steward' and 'Stewardess'");
            while (rs4.next()) {
                cbSt1.addItem(rs.getString("name"));
                cbSt2.addItem(rs.getString("name"));
                cbSt3.addItem(rs.getString("name"));
                cbSt4.addItem(rs.getString("name"));
                cbSt5.addItem(rs.getString("name"));
                cbSt6.addItem(rs.getString("name"));
            }
            con.close();
            rs4.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        cbRN.setSelectedItem("<choose a route>");
        cbType.setSelectedItem("null");
        cbCaptain.setSelectedItem("<choose a captain>");
        cbPilot1.setSelectedItem("<choose pilot 1>");
        cbPilot2.setSelectedItem("<choose pilot 2>");
        cbSt1.setSelectedItem("<steward/stewardess 1>");
        cbSt2.setSelectedItem("<steward/stewardess 2>");
        cbSt3.setSelectedItem("<steward/stewardess 3>");
        cbSt4.setSelectedItem("<steward/stewardess 4>");
        cbSt5.setSelectedItem("<steward/stewardess 5>");
        cbSt6.setSelectedItem("<steward/stewardess 6>");
    }
    private void tblArrangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblArrangeMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) tblArrange.getModel();

        //Set data to text field when raw is selected
        arrangeId = Integer.parseInt(tblModel.getValueAt(tblArrange.getSelectedRow(), 0).toString());
        String tblRouteName = tblModel.getValueAt(tblArrange.getSelectedRow(), 1).toString();
        String tblType = tblModel.getValueAt(tblArrange.getSelectedRow(), 2).toString();
        String tblCaptain = tblModel.getValueAt(tblArrange.getSelectedRow(), 3).toString();
        String tblPilot1 = tblModel.getValueAt(tblArrange.getSelectedRow(), 4).toString();
        String tblPilot2 = tblModel.getValueAt(tblArrange.getSelectedRow(), 5).toString();
        String tblSt1 = tblModel.getValueAt(tblArrange.getSelectedRow(), 6).toString();
        String tblSt2 = tblModel.getValueAt(tblArrange.getSelectedRow(), 7).toString();
        String tblSt3 = tblModel.getValueAt(tblArrange.getSelectedRow(), 8).toString();
        String tblSt4 = tblModel.getValueAt(tblArrange.getSelectedRow(), 9).toString();
        String tblSt5 = tblModel.getValueAt(tblArrange.getSelectedRow(), 10).toString();
        String tblSt6 = tblModel.getValueAt(tblArrange.getSelectedRow(), 11).toString();

        //Set to text field
        cbRN.setSelectedItem(tblRouteName);
        cbType.setSelectedItem(tblType);
        cbCaptain.setSelectedItem(tblCaptain);
        cbPilot1.setSelectedItem(tblPilot1);
        cbPilot2.setSelectedItem(tblPilot2);
        cbSt1.setSelectedItem(tblSt1);
        cbSt2.setSelectedItem(tblSt2);
        cbSt3.setSelectedItem(tblSt3);
        cbSt4.setSelectedItem(tblSt4);
        cbSt5.setSelectedItem(tblSt5);
        cbSt6.setSelectedItem(tblSt6);

    }//GEN-LAST:event_tblArrangeMouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        //Get tblList first
        DefaultTableModel model = (DefaultTableModel) tblArrange.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblArrange.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblArrange.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        //Get tblList first
        DefaultTableModel tblModel = (DefaultTableModel) tblArrange.getModel();
        //delete row
        if (tblArrange.getSelectedRowCount() == 1) {
            //if single row is selected then delete
            //            tblModel.removeRow(tblRoute.getSelectedRow());
            try {
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");
                String query = "delete from airlinedb1.routecrew where idarrange = " + arrangeId;
                Statement add = (Statement) con.createStatement();
                add.executeUpdate(query);
                JOptionPane.showMessageDialog(this, "Arrangement deleted successfully!");
                displayArrange();
                clear();

            } catch (Exception e) {
                e.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "This Arrange Deleted.");
        } else {
            if (tblArrange.getRowCount() == 0) {
                //if table is empty then display message
                JOptionPane.showMessageDialog(this, "Table is Empty!");
            } else {
                //if table is not empty but other than one row is selected
                JOptionPane.showMessageDialog(this, "Please Select Single Row for Delete!");
            }
        }

    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnRetrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) tblArrange.getModel();
        displayArrange();

    }//GEN-LAST:event_btnRetrieveActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        //Get table Model1
        DefaultTableModel tblModel = (DefaultTableModel) tblArrange.getModel();
        arrangeId = Integer.parseInt(tblModel.getValueAt(tblArrange.getSelectedRow(), 0).toString());
        if (arrangeId != 0) {
            //If single row is selected then update

            String routeName = cbRN.getSelectedItem().toString();
            String type = cbType.getSelectedItem().toString();
            String captain = cbCaptain.getSelectedItem().toString();
            String pilot1 = cbPilot1.getSelectedItem().toString();
            String pilot2 = cbPilot2.getSelectedItem().toString();
            String st1 = cbSt1.getSelectedItem().toString();
            String st2 = cbSt2.getSelectedItem().toString();
            String st3 = cbSt3.getSelectedItem().toString();
            String st4 = cbSt4.getSelectedItem().toString();
            String st5 = cbSt5.getSelectedItem().toString();
            String st6 = cbSt6.getSelectedItem().toString();

            try {
                //ssl error
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1?autoReconnect=true&useSSL=false", "root", "Airline3306");
                String query = "UPDATE routecrew SET routename = '" + routeName + "'" + ",airlinetype = '" + type + "'" + ",captain = '" + captain + "'" + ",pilot1 = '" + pilot1 + "'" + ",pilot2 = '" + pilot2 + "'"
                        + ",st1 = '" + st1 + "'" + ",st2 = '" + st2 + "'" + ",st3 = '" + st3 + "'" + ",st4 = '" + st4 + "'" + ",st5 = '" + st5 + "'" + ",st6 = '" + st6 + "'" + " WHERE idarrange = " + arrangeId;
                Statement add = (Statement) con.createStatement();
                add.executeUpdate(query);
                JOptionPane.showMessageDialog(this, "Arrangement updated successfully!");
                displayArrange();
                clear();

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            try {
                if (tblArrange.getSelectedRow() == 0) {
                    //if table is empty.
                    JOptionPane.showMessageDialog(this, "Please Select an Arrangement.");
                } else {
                    //if multiple rows are selected.
                    JOptionPane.showMessageDialog(this, "Please Select Single Row for Update!");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:

        if (cbRN.getSelectedItem().equals("<choose a route>")
                || cbType.getSelectedItem().equals("null")
                || cbCaptain.getSelectedItem().equals("<choose a captain>")
                || cbPilot1.getSelectedItem().equals("<choose pilot 1>")
                || cbPilot2.getSelectedItem().equals("<choose pilot 2>")
                || cbSt1.getSelectedItem().equals("<steward/stewardess 1>")
                || cbSt2.getSelectedItem().equals("<steward/stewardess 2>")
                || cbSt3.getSelectedItem().equals("<steward/stewardess 3>")
                || cbSt4.getSelectedItem().equals("<steward/stewardess 4>")) {
            JOptionPane.showMessageDialog(null, "Please Set All Data!");
        } else {
            try {
                arrangeCount();
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb1", "root", "Airline3306");

                PreparedStatement add = (PreparedStatement) con.prepareStatement("insert into routecrew values(?,?,?,?,?,?,?,?,?,?,?,?)");
                add.setInt(1, idarrange);
                add.setString(2, cbRN.getSelectedItem().toString());
                add.setString(3, cbType.getSelectedItem().toString());
                add.setString(4, cbCaptain.getSelectedItem().toString());
                add.setString(5, cbPilot1.getSelectedItem().toString());
                add.setString(6, cbPilot2.getSelectedItem().toString());
                add.setString(7, cbSt1.getSelectedItem().toString());
                add.setString(8, cbSt2.getSelectedItem().toString());
                add.setString(9, cbSt3.getSelectedItem().toString());
                add.setString(10, cbSt4.getSelectedItem().toString());
                add.setString(11, cbSt5.getSelectedItem().toString());
                add.setString(12, cbSt6.getSelectedItem().toString());

                int row = add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Arrangement solved successfully!");
                con.close();
                displayArrange();
                clear();

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed

        clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void cbSt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSt3ActionPerformed

    private void cbSt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSt1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnRetrieve;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbCaptain;
    private javax.swing.JComboBox<String> cbPilot1;
    private javax.swing.JComboBox<String> cbPilot2;
    private javax.swing.JComboBox<String> cbRN;
    private javax.swing.JComboBox<String> cbSt1;
    private javax.swing.JComboBox<String> cbSt2;
    private javax.swing.JComboBox<String> cbSt3;
    private javax.swing.JComboBox<String> cbSt4;
    private javax.swing.JComboBox<String> cbSt5;
    private javax.swing.JComboBox<String> cbSt6;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblId1;
    private javax.swing.JLabel lblId11;
    private javax.swing.JLabel lblId12;
    private javax.swing.JLabel lblId17;
    private javax.swing.JLabel lblId18;
    private javax.swing.JLabel lblId19;
    private javax.swing.JLabel lblId20;
    private javax.swing.JLabel lblId21;
    private javax.swing.JLabel lblId22;
    private javax.swing.JLabel lblId23;
    private javax.swing.JLabel lblId24;
    private javax.swing.JLabel lblId25;
    private javax.swing.JLabel lblId6;
    private javax.swing.JLabel lblSearchContent;
    private javax.swing.JTable tblArrange;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblArrange.getModel();
        model.setRowCount(0);

//        for (Doctor dc : dlist.getDlist()){
//            Object[] row = new Object[9];
//            row[0] = dc.getId();
//            row[1] = dc.getName();
//            row[2] = dc.getGender();
//            row[3] = dc.getAge();
//            row[4] = dc.getPhoneNumber();
//            row[5] = dc.getPassword();
//            row[6] = dc.getField();
//            row[7] = dc.getStandard();
//            row[8] = dc.getFee();
//            
//            model.addRow(row);
//        }
    }
}
